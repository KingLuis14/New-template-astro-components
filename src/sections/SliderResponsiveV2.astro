---
import SectionPage from '@/components/SectionPage.astro';
import Wrapper from '@/components/Wrapper/Wrapper.astro';
import { Icon } from 'astro-icon/components';

const images = [
  'https://coolboxpe.vtexassets.com/arquivos/ids/377537-500-auto?v=638572592522900000&width=500&height=auto&aspect=true',
  'https://coolboxpe.vtexassets.com/arquivos/ids/376768-500-auto?v=638567621131230000&width=500&height=auto&aspect=true',
  'https://coolboxpe.vtexassets.com/arquivos/ids/334121-500-auto?v=638385167318700000&width=500&height=auto&aspect=true',
  'https://coolboxpe.vtexassets.com/arquivos/ids/342941-500-auto?v=638429403182630000&width=500&height=auto&aspect=true',
  'https://coolboxpe.vtexassets.com/arquivos/ids/333943-500-auto?v=638382726710570000&width=500&height=auto&aspect=true',
  'https://coolboxpe.vtexassets.com/arquivos/ids/338405-500-auto?v=638416465817530000&width=500&height=auto&aspect=true',
  'https://coolboxpe.vtexassets.com/arquivos/ids/376761-500-auto?v=638567617479800000&width=500&height=auto&aspect=true',
  'https://coolboxpe.vtexassets.com/arquivos/ids/333678-500-auto?v=638381625529870000&width=500&height=auto&aspect=true',
];

// images.push(images[0]);
// images.unshift(images[images.length - 2]);
---

<SectionPage>
  <Wrapper>
    <div class="slider slider--v2">
      <button class="slider__prev">
        <Icon name="ArrowIcon" size={25} />
      </button>
      <ul class="slider__list">
        {
          images.map((img, index) => (
            <li class:list={[`slider__item`, { active: index === 0 }]} data-slide={index}>
              <img src={img} alt={`imagen${index}`} />
            </li>
          ))
        }
      </ul>
      <nav class="slider__nav"></nav>
      <button class="slider__next">
        <Icon name="ArrowIcon" size={25} />
      </button>
    </div>
  </Wrapper>
</SectionPage>

<style lang="scss">
  .slider {
    display: grid;
    gap: 1.5rem;

    &__list {
      --gaps: 20px;
      --Move: auto;
      --transition: none;
      --sliders-show: 2;

      grid-column: 1 / -1;
      grid-row: 1 / 2;

      display: flex;
      gap: var(--gaps);

      transition: var(--transition) 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      overflow-x: scroll;
      scroll-behavior: var(--Move);
      scroll-snap-type: x mandatory;

      scrollbar-width: 0;

      &::-webkit-scrollbar {
        height: 0px;
      }

      @media screen and (width < 768px) {
        > :nth-child(2n + 1) {
          scroll-snap-stop: always;
          scroll-snap-align: start;
        }
      }

      @media screen and (768px <= width <= 1400px) {
        --sliders-show: 4;

        > :nth-child(4n + 1) {
          scroll-snap-stop: always;
          scroll-snap-align: start;
        }
      }
    }

    &__item {
      flex: 0 0 calc((100% - ((var(--sliders-show) - 1) * var(--gaps))) / var(--sliders-show));

      &.active img {
        // filter: invert(70%);
      }

      > img {
        width: 100%;
        aspect-ratio: 1;
        border-radius: 0.5rem;
      }
    }

    &__nav {
      grid-column: 1 / -1;
      grid-row: 2 / 3;
      min-height: 2.5rem;
      justify-self: center;
      display: flex;
      align-items: start;
      padding-block-end: 1.5rem;
      gap: 0.8rem;
    }

    &__nav > :global(button) {
      width: 10px;
      aspect-ratio: 1/1;
      outline: 2px solid white;
      border-radius: 50%;

      &.active {
        background-color: white;
      }
    }

    &__next {
      grid-column: 1 / -1;
      grid-row: 1 / span 1;
      justify-self: end;
      align-self: center;
      z-index: 20;
      border-radius: 50%;
      color: white;
      width: 40px;
      aspect-ratio: 1;
      display: grid;
      place-items: center;
      background-color: rgba(0, 0, 0, 0.566);

      > * {
        transform: rotate(90deg);
        pointer-events: none;
      }
    }

    &__prev {
      grid-column: 1 / -1;
      grid-row: 1 / 2;
      z-index: 20;
      border-radius: 50%;
      align-self: center;
      color: white;
      width: 40px;
      aspect-ratio: 1;
      display: grid;
      place-items: center;
      background-color: rgba(0, 0, 0, 0.566);

      > * {
        transform: rotate(-90deg);
        pointer-events: none;
      }
    }
  }
</style>

<!-- <script>
  import { SliderResponsive } from '@/scripts/SliderResponsive.ts';

  new SliderResponsive('.slider.slider--v2');
</script> -->
